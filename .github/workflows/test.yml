name: Testing

on:
  push:
  workflow_dispatch:
  pull_request:

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        tarantool: ['1.10', '2.10', '2.11', '3.1', '3.2']
        coveralls: [false]
        include:
          - tarantool: '2.11'
            coveralls: true
    runs-on: [ubuntu-20.04]
    steps:
      - uses: actions/checkout@master
      - uses: tarantool/setup-tarantool@v3
        with:
          tarantool-version: ${{ matrix.tarantool }}

      - name: Prepare the repo
        run: curl -L https://tarantool.io/release/2/installer.sh | bash
        env:
          DEBIAN_FRONTEND: noninteractive

      - name: Install tt cli
        run: sudo apt install -y tt=2.5.2
        env:
          DEBIAN_FRONTEND: noninteractive

      - name: Install Tarantool
        run: tt install tarantool ${{ matrix.tarantool }} --dynamic

      - name: Cache rocks
        uses: actions/cache@v2
        id: cache-rocks
        with:
          path: .rocks/
          key: cache-rocks-${{ matrix.tarantool }}-05

      - run: echo $PWD/.rocks/bin >> $GITHUB_PATH

      - run: ./deps.sh

      - name: Build module
        run: |
          cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -S . -B build
          make -C build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run tests without code coverage analysis
        run: make -C build luatest
        if: matrix.coveralls != true

      - name: Send code coverage to coveralls.io
        run: make -C build coveralls
        if: ${{ matrix.coveralls }}
